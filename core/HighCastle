package com.mygdx.game;

import com.badlogic.gdx.ApplicationAdapter;
import com.badlogic.gdx.Gdx;
import com.badlogic.gdx.graphics.GL20;
import com.badlogic.gdx.graphics.OrthographicCamera;
import com.badlogic.gdx.graphics.Texture;
import com.badlogic.gdx.graphics.g2d.Sprite;
import com.badlogic.gdx.graphics.g2d.SpriteBatch;
import com.badlogic.gdx.maps.tiled.TiledMap;
import com.badlogic.gdx.maps.tiled.TiledMapRenderer;
import com.badlogic.gdx.maps.tiled.TmxMapLoader;
import com.badlogic.gdx.maps.tiled.renderers.OrthogonalTiledMapRenderer;

public class HighCastle extends ApplicationAdapter {
	SpriteBatch batch;
	Sprite sprite;
	Sprite bg;
	OrthographicCamera camera;
	Texture texture;

	public float Xposition;
	public float Yposition;

	private float w,h;

	final float WORLD_WIDTH = 1920;
	final float WORLD_HEIGHT = 1080;

	@Override
	public void create () {
	batch = new SpriteBatch();

	camera = new OrthographicCamera(Gdx.graphics.getWidth(), Gdx.graphics.getHeight());
	camera.translate(camera.viewportWidth/2, camera.viewportHeight/2);

	sprite = new Sprite(new Texture(Gdx.files.internal("Samurai1.png")));
	bg = new Sprite(new Texture(Gdx.files.internal("firstroom.png")));

	bg.setSize(WORLD_WIDTH, WORLD_HEIGHT);
	float aspectRatio = (float)Gdx.graphics.getHeight()/(float)Gdx.graphics.getWidth();

		sprite.setPosition(350, 200);
		sprite.setSize(380, 400);

		w = Gdx.graphics.getWidth();
		h = Gdx.graphics.getWidth();

		Xposition = 500;
		Yposition = 500;

		GameManager.initialize(w, h);
	}

	@Override
	public void render () {
	Gdx.gl.glClearColor(0, 0, 0, 1);
	Gdx.gl.glClear(GL20.GL_COLOR_BUFFER_BIT);
	camera.update();

		batch.setProjectionMatrix(camera.combined);
		InputManager.handleInput(camera, sprite);

	batch.begin();

	batch.setProjectionMatrix(camera.combined);
	bg.draw(batch);
	sprite.draw(batch);
	GameManager.renderGame(batch);

	batch.end();
	}
	
	@Override
	public void dispose () {
	bg.getTexture().dispose();
	sprite.getTexture().dispose();
	GameManager.dispose();
	}
}
